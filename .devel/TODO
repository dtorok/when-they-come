## task list
- [x] scribble the API
- [x] write dummy implementation
- [x] how to serve HTML with template
- [x] create main html
- [x] geolocation snippet on the client side
- [x] super basic, text based client
- [x] go through the whole London API
- [x] change the client to avoid line selection
- [ ] learn about JSON serialization
- [ ] backend calls only for London
- [ ] better JSON marshalling
- [ ] better UI
- [ ] choose an IDL
- [ ] write IDL for the API
- [ ] fix deprecated proxy events
- [ ] ajax error handling



## Own API
- stopsByPosition
    - coord, radius
    - [{id: ..., coord: ..., name: ..., distance: ...}]
- linesByStop
    - stop
    - [{id: ..., name: ..., type: ...}]
- vehiclesByLineAndStop
    - line, stop
    - [{id: ..., arrives_at: ...}]



## London API:
### What to use:
- https://api.tfl.gov.uk/StopPoint?lat=51.507751&lon=-0.127608&stopTypes=NaptanMetroStation&radius=200&useStopPointHierarchy=True&returnLines=True&app_id=&app_key=
    - id, commonName, distance, status, lat, lon

- https://api.tfl.gov.uk/StopPoint/940GZZLUCHX/Arrivals?app_id=&app_key=
    - towards, lineName, timeToStation, expectedArrival

### Others:
- https://api.tfl.gov.uk/StopPoint/Meta/stoptypes?app_id=&app_key=
    - stoptypes
- https://api.tfl.gov.uk/StopPoint/940GZZLUCHX/Arrivals?app_id=&app_key=
    - lineName, vehicleId, towards, expectedArrival, timeToStation

- https://api.tfl.gov.uk/StopPoint/940GZZLUCHX/Route?app_id=&app_key=
    - lineId, mode, routeSectionName, isActive, naptanId

- https://api.tfl.gov.uk/Line/bakerloo/Arrivals?stopPointId=940GZZLUCHX&app_id=&app_key=
    - vehicleId, towards, expectedArrival, timeToStation

